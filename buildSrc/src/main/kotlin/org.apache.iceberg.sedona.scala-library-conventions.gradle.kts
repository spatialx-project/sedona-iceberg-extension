/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    // Apply the common convention plugin for shared build configuration between library and application projects.
    id("org.apache.iceberg.sedona.scala-common-conventions")

    // Apply the java-library plugin for API and implementation separation.
    `java-library`
    `maven-publish`
}

configurations {
    configurations.testImplementation.get().apply {
        extendsFrom(configurations.compileOnly.get())
    }
}
dependencies {
    compileOnly("org.scala-lang:scala-library")
    compileOnly("org.locationtech.jts:jts-core")
    compileOnly("org.apache.sedona:sedona-sql-3.0_2.12")
    compileOnly("org.apache.iceberg:iceberg-spark-3.3_2.12")
    compileOnly("org.apache.spark:spark-sql_2.12")

    testImplementation("org.apache.iceberg:iceberg-hive-metastore")
    testImplementation("org.apache.iceberg:iceberg-spark-extensions-3.3_2.12")
    testImplementation("org.apache.sedona:sedona-core-3.0_2.12:1.2.1-incubating")
    testImplementation("org.datasyslab:geotools-wrapper")
    testImplementation("org.apache.spark:spark-hive_2.12:3.3.0") {
        exclude("org.apache.avro", "avro")
        exclude("org.apache.arrow")
        exclude("org.apache.parquet")
        // to make sure io.netty.buffer only comes from project(':iceberg-arrow')
        exclude("io.netty", "netty-buffer")
        exclude("org.roaringbitmap")
    }
}
